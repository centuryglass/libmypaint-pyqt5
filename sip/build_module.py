import os
import sipconfig
from os.path import abspath
from PyQt5 import QtCore

# You should modify to get exact directory paths to SIP, Qt
sip_inc_dir= abspath(os.getcwd() + '/../PyQt5-5.15.10/sip')
qt_inc_dir = "/usr/include/qt"

qtwidget_flags = "-DQT_WIDGETS_LIB -I/usr/include/qt/QtWidgets -I/usr/include/qt -DQT_GUI_LIB -I/usr/include/qt/QtGui -DQT_CORE_LIB -I/usr/include/qt/QtCore -lQt5Widgets -lQt5Gui -lQt5Core"

target_dir = abspath(os.getcwd() + "/../src")

build_dir = abspath(os.getcwd() + "/../build-sip")
if not os.path.exists(build_dir):
    os.makedirs(build_dir)

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = build_dir + "/mpbrushlib.sbf"

# Get the PyQt configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.  Note that we tell SIP where to find the qt
# module's specification files using the -I flag.
os.system(" ".join([config.sip_bin, "-w", "-c", build_dir, "-b", build_file,
                    QtCore.PYQT_CONFIGURATION["sip_flags"],
                    "-I" + sip_inc_dir,
                    "-I" + os.getcwd() + "/../libmypaint",
                    "-I" + os.getcwd() + "/../json-c",
                    "mpbrushlib.sip"]))

# Create the Makefile.
makefile = sipconfig.SIPModuleMakefile(config, build_file)

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the "lib" prefix on UNIX, or the
# ".dll" extension on Windows).
extraFlags = "-std=c++11 %s -I../libmypaint -I../json-c -I../src" % (qtwidget_flags)
makefile.extra_cflags = [extraFlags]
makefile.extra_cxxflags = [extraFlags]
makefile.extra_lflags = ["-Wl,-R" + target_dir, "/usr/lib/libQt5Widgets.so", "/usr/lib/libQt5Gui.so", "/usr/lib/libQt5Core.so"]
makefile.extra_lib_dirs = [target_dir, "../json-c", "../libmypaint"]
makefile.extra_libs = ["QTMyPaint", "json-c"]

# Generate the Makefile itself.
makefile.generate()

os.rename("Makefile", build_dir + "/Makefile")
os.chdir(build_dir)
os.system("make")
os.rename("libmypaint_pyqt5.so", "../libmypaint_pyqt5.so")
